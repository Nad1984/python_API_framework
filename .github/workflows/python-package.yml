# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on: workflow_dispatch
# on:
#   push:
#     branches: [ "master" ]
#   pull_request:
#     branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run tests
      run: pytest --junit-xml=test-results.xml
    
    - name: Surface failing tests
      if: always()
      uses: pmeier/pytest-results-action@main
      with:
        # A list of JUnit XML files, directories containing the former, and wildcard
        # patterns to process.
        # See @actions/glob for supported patterns.
        path: test-results.xml

        # (Optional) Add a summary of the results at the top of the report
        summary: true
    
        # (Optional) Select which results should be included in the report.
        # Follows the same syntax as `pytest -r`
        display-options: fEX
    
        # (Optional) Fail the workflow if no JUnit XML was found.
        fail-on-empty: true
    
        # (Optional) Title of the test results section in the workflow summary
        title: Test results
